apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-config
  namespace: discourse-prod
data:
  telegraf.conf: |-
    # Telegraf Configuration
    [global_tags]
    # Configuration for telegraf agent
    [agent]
      interval = "300s"
      round_interval = true
      metric_batch_size = 100
      metric_buffer_limit = 10000
      flush_interval = "10s"

    # Lambda
    [[inputs.cloudwatch]]
      region = "us-west-2"
      period = "5m"
      interval = "5m"
      namespace = "AWS/Lambda"
      [inputs.cloudwatch.tags]
        application = "discourse"
        environment = "dev"
      [[inputs.cloudwatch.metrics]]
        names = ["Invocations", "Errors", "Duration"]
        ## Dimension filters for Metric (optional)
        [[inputs.cloudwatch.metrics.dimensions]]
          name = "FunctionName"
          value = "discourse-dev-process-email"

    [[inputs.cloudwatch]]
      region = "us-west-2"
      period = "5m"
      interval = "5m"
      namespace = "AWS/Lambda"
      [inputs.cloudwatch.tags]
        application = "discourse"
        environment = "staging"
      [[inputs.cloudwatch.metrics]]
        names = ["Invocations", "Errors", "Duration"]
        [[inputs.cloudwatch.metrics.dimensions]]
          name = "FunctionName"
          value = "discourse-staging-process-email"

    [[inputs.cloudwatch]]
      region = "us-west-2"
      period = "5m"
      interval = "5m"
      namespace = "AWS/Lambda"
      [inputs.cloudwatch.tags]
        application = "discourse"
        environment = "staging"
      [[inputs.cloudwatch.metrics]]
        names = ["Invocations", "Errors", "Duration"]
        [[inputs.cloudwatch.metrics.dimensions]]
          name = "FunctionName"
          value = "discourse-staging-tldr"

    # RDS
    [[inputs.cloudwatch]]
      region = "us-west-2"
      period = "5m"
      interval = "5m"
      namespace = "AWS/RDS"
      [inputs.cloudwatch.tags]
        application = "discourse"
        environment = "dev"
      [[inputs.cloudwatch.metrics]]
        names = ["CPUUtilization", "DatabaseConnections", "DiskQueueDepth", "FreeableMemory", "ReadIOPS", "ReadLatency", "WriteIOPS", "WriteLatency"]
        [[inputs.cloudwatch.metrics.dimensions]]
          name = "DBInstanceIdentifier"
          value = "discourse-dev"

    [[inputs.cloudwatch]]
      region = "us-west-2"
      period = "5m"
      interval = "5m"
      namespace = "AWS/RDS"
      [inputs.cloudwatch.tags]
        application = "discourse"
        environment = "staging"
      [[inputs.cloudwatch.metrics]]
        names = ["CPUUtilization", "DatabaseConnections", "DiskQueueDepth", "FreeStorageSpace", "ReadIOPS", "ReadLatency", "WriteIOPS", "WriteLatency"]
        [[inputs.cloudwatch.metrics.dimensions]]
          name = "DBInstanceIdentifier"
          value = "discourse-staging"

    # SES - Global and not per SES domain
    [[inputs.cloudwatch]]
      region = "us-west-2"
      period = "30m"
      interval = "30m"
      namespace = "AWS/SES"
      [inputs.cloudwatch.tags]
        application = "discourse"
        environment = "prod"
      [[inputs.cloudwatch.metrics]]
        names = ["Delivery", "Send"]

    # Elasticache - Redis
    [[inputs.cloudwatch]]
      region = "us-west-2"
      period = "15m"
      interval = "15m"
      namespace = "AWS/ElastiCache"
      [inputs.cloudwatch.tags]
        application = "discourse"
        environment = "dev"
      [[inputs.cloudwatch.metrics]]
        names = ["CPUUtilization", "FreeableMemory"]
        [[inputs.cloudwatch.metrics.dimensions]]
          name = "CacheClusterId"
          value = "discourse-dev"

    [[inputs.cloudwatch]]
      region = "us-west-2"
      period = "15m"
      interval = "15m"
      namespace = "AWS/ElastiCache"
      [inputs.cloudwatch.tags]
        application = "discourse"
        environment = "staging"
      [[inputs.cloudwatch.metrics]]
        names = ["CPUUtilization", "FreeableMemory"]
        [[inputs.cloudwatch.metrics.dimensions]]
          name = "CacheClusterId"
          value = "discourse-staging"

    # S3
    [[inputs.cloudwatch]]
      region = "us-west-2"
      period = "24h"
      interval = "30m"
      delay = "5m"
      namespace = "AWS/S3"

    # OUTPUTS
    [[outputs.influxdb]]
      urls = ["${INFLUX_URL}"]
      database = "${INFLUX_DB}"
      timeout  = "15s"
      username = "${INFLUX_USER}"
      password = "${INFLUX_PW}"

